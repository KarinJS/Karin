name: Build Docker

on:
  workflow_run:
    workflows: ["release"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DOCKERHUB_REPO: karinjs/karin
  GHCR_REPO: ghcr.io/karinjs/karin
  ALIYUN_REPO: registry.cn-hangzhou.aliyuncs.com/karinjs/karin

jobs:
  build:
    runs-on: ubuntu-latest
    # 确保只有当release工作流成功完成时才运行
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GHCR_REPO }}
            ${{ env.ALIYUN_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: 登录DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: 登录GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 登陆 阿里云 镜像仓库
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - uses: docker/build-push-action@v6
        id: build
        with:
          platforms: linux/amd64 # ,linux/arm64,linux/arm/v7
          labels: ${{ steps.meta.outputs.labels }}
          file: packages/docker/Dockerfile
          # 按需修改
          outputs: type=image,"name=${{ env.DOCKERHUB_REPO }},${{ env.ALIYUN_REPO }},${{ env.GHCR_REPO }}",push-by-digest=true,name-canonical=true,push=true

      - name: 导出摘要
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: 上传摘要
        uses: actions/upload-artifact@v4
        with:
          name: digests-linux-amd64
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  push:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: 下载摘要
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: 设置Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: 登录GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 登陆 阿里云 镜像仓库
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Docker元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          # 按需修改
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GHCR_REPO }}
            ${{ env.ALIYUN_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: 创建清单列表并推送
        working-directory: ${{ runner.temp }}/digests
        # 按需修改
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKERHUB_REPO }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.ALIYUN_REPO }}@sha256:%s ' *)

      - name: 检查镜像
        # 按需修改
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.ALIYUN_REPO }}:${{ steps.meta.outputs.version }}

name: Release and Publish
on:
  push:
    # 监听 dev 分支的 push 事件
    branches:
      - dev
# 赋予 release-please-action 权限
permissions:
  contents: write
  pull-requests: write
jobs:
  # 设置 release-please 任务
  release-please:
    # 设置任务运行环境为 ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      # 使用 release-please-action 动作来自动创建发布 PR
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          # 设置发布类型为 node
          release-type: node
          # 设置包名
          package-name: node-karin
          # 设置发布PR分支
          default-branch: dev
      # 检出代码
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      # 设置 Node.js 环境
      - uses: actions/setup-node@v4
        with:
          # 设置 Node.js 版本
          node-version: 20
          # 设置 npm 源
          registry-url: "https://registry.npmjs.org"
        if: ${{ steps.release.outputs.release_created }}
      # 安装jq工具 删除对等依赖 对等依赖是给karin自身使用的
      - run: sudo apt-get install jq && jq 'del(.peerDependencies)' package.json > package.json.tmp && mv package.json.tmp package.json
        if: ${{ steps.release.outputs.release_created }}
      # 安装 pnpm
      - run: npm install -g pnpm
        if: ${{ steps.release.outputs.release_created }}
      # 安装依赖 不安装对等依赖
      - run: pnpm install --config.auto-install-peers=false --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.RELEASE }}
        if: ${{ steps.release.outputs.release_created }}
      # 构建输出
      - run: pnpm run build
        if: ${{ steps.release.outputs.release_created }}
      # 删除开发依赖 使用jq工具删除
      - run: jq 'del(.devDependencies)' package.json > package.json.tmp && mv package.json.tmp package.json
        if: ${{ steps.release.outputs.release_created }}
      # 发布到 npm
      - run: pnpm run pub
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}

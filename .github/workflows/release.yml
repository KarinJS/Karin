name: release
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      # 使用 release-please-action 处理版本发布
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          # 使用配置文件来管理发布
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

      # 打印outputs
      - name: 打印outputs
        run: |
          echo "============ Release Please Outputs ============"
          echo "releases_created: ${{ steps.release.outputs.releases_created }}"
          echo "node-karin release created: ${{ steps.release.outputs['node-karin--releases_created'] }}"
          echo "cli release created: ${{ steps.release.outputs['cli--releases_created'] }}"
          echo "============ All Outputs ============"
          echo "${{ steps.release.outputs }}"

      # 如果有新版本发布，执行发布流程
      - name: 检出代码
        uses: actions/checkout@v4
        if: ${{ steps.release.outputs.releases_created }}

      - name: 设置 node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
        if: ${{ steps.release.outputs.releases_created }}

      - name: 设置 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
        if: ${{ steps.release.outputs.releases_created }}

      # 安装所有依赖
      - name: 安装依赖
        run: pnpm install
        if: ${{ steps.release.outputs.releases_created }}

      # 发布 core 包
      - name: 发布 core 包
        if: ${{ steps.release.outputs.releases_created && steps.release.outputs['packages/core--releases_created'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/core
        run: cd packages/core && pnpm build:prod && pnpm pub

      # 发布 cli 包
      - name: 发布 cli 包
        if: ${{ steps.release.outputs.releases_created && steps.release.outputs['packages/cli--releases_created'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/cli
        run: cd packages/cli && pnpm pub

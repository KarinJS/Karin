name: release
on:
  push:
    branches:
      - main

# 赋予 release-please-action 权限
permissions:
  contents: write
  pull-requests: write
jobs:
  # 设置 release-please 任务
  release-please:
    # 设置任务运行环境为 ubuntu-latest
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.release_created }}
      core_release: ${{ steps.release.outputs['packages/core--release_created'] }}
      cli_release: ${{ steps.release.outputs['packages/cli--release_created'] }}
      create_karin_release: ${{ steps.release.outputs['packages/create-karin--release_created'] }}
      web_release: ${{ steps.release.outputs['packages/web--release_created'] }}
    steps:
      # 使用 release-please-action 动作来自动创建发布 PR
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
  
  # 只有当实际创建了发布时才执行发布任务
  publish:
    needs: release-please
    # 同时检查单数和复数形式，确保兼容性
    if: ${{ needs.release-please.outputs.releases_created == 'true' || needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: 设置 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      # 安装所有依赖
      - name: 安装依赖
        run: pnpm install

      # cp README.md 到 core 目录
      - name: 复制 README.md 到 core 目录
        run: cp README.md packages/core
        if: ${{ needs.release-please.outputs.core_release == 'true' || needs.release-please.outputs.web_release == 'true' }}

      # 全局构建
      - name: 全局构建
        run: pnpm build
        if: ${{ needs.release-please.outputs.core_release == 'true' || needs.release-please.outputs.web_release == 'true' }}

      # 发布 core 包
      - name: 发布 core 包
        if: ${{ needs.release-please.outputs.core_release == 'true' || needs.release-please.outputs.web_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/core
        run: npm pkg delete peerDependencies && pnpm run pub

      # 发布 cli 包
      - name: 发布 cli 包
        if: ${{ needs.release-please.outputs.cli_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/cli
        run: pnpm run pub

      # 发布 create-karin 包
      - name: 发布 create-karin 包
        if: ${{ needs.release-please.outputs.create_karin_release == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: packages/create-karin
        run: pnpm pub

      - name: Sync repo status
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: sync.yml
          repo: KarinJS/repo-status
          # Required when using the `repo` option. Either a PAT or a token generated from the GitHub app or CLI
          token: ${{ secrets.RELEASE }}
